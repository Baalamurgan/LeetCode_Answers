/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode l3 = new ListNode(0);
        ListNode iterate = l3;
        while(l1!=null || l2!=null){
            if(l1==null){
                iterate.next = l2;
                return l3.next;
            }
            else if(l2==null){
                iterate.next = l1;
                return l3.next;
            }
            else{
            if(l1.val < l2.val){
                ListNode temp = l1;
                l1=l1.next;
                iterate.next = temp;
                iterate=iterate.next;
            }
            else{
                ListNode temp = l2;
                l2 = l2.next;
                iterate.next = temp;
                iterate = iterate.next;
            }
            }
        }
        return l3.next;
    }
}
