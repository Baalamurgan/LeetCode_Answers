class Solution {
    public int strStr(String txt, String pat) {
//  KMP    
//  NAIVE
        int M = pat.length();
        int N = txt.length();
        int lps[] = new int[M];
        int j = 0; // index for pat[]
  
        int len = 0;
        int p = 1;
        lps[0] = 0;
        while (p < M) {
            if (pat.charAt(p) == pat.charAt(len)) {
                len++;
                lps[p] = len;
                p++;
            }
            else
            {
                if (len != 0) {
                    len = lps[len - 1];
                }
                else
                {
                    lps[p] = len;
                    p++;
                }
            }
        }
        int i = 0;
        while (i < N) {
            if (pat.charAt(j) == txt.charAt(i)) {
                j++;
                i++;
            }
            if (j == M) {
                j = lps[j - 1];
                return i-j-1;
            }
            else if (i < N && pat.charAt(j) != txt.charAt(i)) {
                if (j != 0)
                    j = lps[j - 1];
                else
                    i = i + 1;
            }
        }
        return -1;
    }
}
